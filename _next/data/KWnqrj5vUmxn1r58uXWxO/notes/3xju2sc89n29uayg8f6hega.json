{"pageProps":{"note":{"id":"3xju2sc89n29uayg8f6hega","title":"Python and Packages","desc":"","updated":1711113510735,"created":1709132173368,"custom":{},"fname":"courses.python-and-packages","type":"note","vault":{"fsPath":"vault"},"contentHash":"a5029bf47e76709b588be512952478c8","links":[{"from":{"id":"szdrijhisrocpfc7s49wifq","fname":"open-notebook.commons.pamrein.2024.02.29","vaultName":"vault"},"type":"backlink","position":{"start":{"line":13,"column":1,"offset":193},"end":{"line":13,"column":32,"offset":224},"indent":[]},"value":"courses.python-and-packages"}],"anchors":{"python":{"type":"header","text":"Python","value":"python","line":7,"column":0,"depth":1},"python-versions":{"type":"header","text":"Python versions","value":"python-versions","line":19,"column":0,"depth":2},"pyenv":{"type":"header","text":"Pyenv","value":"pyenv","line":27,"column":0,"depth":3},"installation":{"type":"header","text":"Installation","value":"installation","line":29,"column":0,"depth":4},"useful-commands":{"type":"header","text":"Useful commands","value":"useful-commands","line":48,"column":0,"depth":4},"poetry":{"type":"header","text":"Poetry","value":"poetry","line":60,"column":0,"depth":3},"installation-1":{"type":"header","text":"Installation","value":"installation-1","line":64,"column":0,"depth":4},"useful-commands-1":{"type":"header","text":"Useful commands","value":"useful-commands-1","line":78,"column":0,"depth":4}},"children":[],"parent":"jldFUSJGjDf1mFH8c2yUI","data":{}},"body":"<h1 id=\"python-and-packages\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#python-and-packages\"></a>Python and Packages</h1>\n<h1 id=\"python\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#python\"></a>Python</h1>\n<p>To get start with python is very easy. But to come back to a project and let it run again can hurt.\nThis should be a small introduction how to handle python environements.  </p>\n<p>It is important for the following steps, to have now activated environments. For example if you using conda (you can see it in the terminal - (base) ), then you should deactivate it. Maybe in the past you had some troubles... It can be a good idea to clean the base in conda.</p>\n<p>Conda deactivate:           <code>conda deactivate</code><br>\nConda actiavate (base):     <code>conda activate</code><br>\nConda clean (base):         <code>conda clean --all</code>  </p>\n<p>For checking, which pyhton version is in use:   <code>which python</code>  </p>\n<h2 id=\"python-versions\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#python-versions\"></a>Python versions</h2>\n<p>As we all, also Python is developping. Some packages are developped for the newest python and a specific time\nbut not updated for the newest python versions. This can be a problem when you want to use this package, but you just installed the newest version.  </p>\n<p>The solution is to use a virtual environment (for example <a href=\"https://anaconda.org/\"><strong>conda</strong></a>, <a href=\"https://pypi.org/project/pipenv/\"><strong>pipenv</strong></a>, ect.).  </p>\n<p>In this case we will have a look for <strong>pyenv</strong> (the easier way to work with python versions).  </p>\n<h3 id=\"pyenv\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#pyenv\"></a>Pyenv</h3>\n<h4 id=\"installation\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#installation\"></a>Installation</h4>\n<p>To install <a href=\"https://github.com/pyenv/pyenv\"><strong>pyenv</strong></a> you can use the automatic installer (tested with Ubuntu):<br>\n<code>curl https://pyenv.run | bash</code>  </p>\n<p>After that you have to add the following lines to your <code>vim ~/.bashrc</code> fileend:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">#Pyenv loader</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">PYENV_ROOT</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$HOME</span>/.pyenv\"</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> -d <span class=\"token variable\">$PYENV_ROOT</span>/bin <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$PYENV_ROOT</span>/bin:<span class=\"token environment constant\">$PATH</span>\"</span>\n<span class=\"token builtin class-name\">eval</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>pyenv init -<span class=\"token variable\">)</span></span>\"</span>\n\n<span class=\"token comment\"># Load pyenv-virtualenv automatically</span>\n<span class=\"token builtin class-name\">eval</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>pyenv virtualenv-init -<span class=\"token variable\">)</span></span>\"</span>\n\n</code></pre>\n<p>To take this changes into effect you have to restart your terminal or run <code>source ~/.bashrc</code>. Now it is ready to go.</p>\n<h4 id=\"useful-commands\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#useful-commands\"></a>Useful commands</h4>\n<div class=\"table-responsive\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th><strong>command</strong></th><th><strong>description</strong></th></tr></thead><tbody><tr><td><code>pyenv install --list</code></td><td>all possible python versions to install.</td></tr><tr><td><code>pyenv install &#x3C;version></code></td><td>install the choosen <version> from --list. This can take a while...</version></td></tr><tr><td><code>pyenv versions</code></td><td>shows all installed environments and the active one</td></tr><tr><td><code>pyenv</code></td><td>help site</td></tr><tr><td><code>pyenv global &#x3C;system></code></td><td>Don't use this, if you not sure what you are doing. We will use poetry for the python versions.</td></tr><tr><td><code>pyenv local &#x3C;system></code></td><td>If poetry can't find your version. Use this to load the rigth version and the use poetry.</td></tr></tbody></table></div>\n<h3 id=\"poetry\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#poetry\"></a>Poetry</h3>\n<p>Poetry takes care of the python versions and the packages. All this is handled in a single *.toml file.\nChanges can be done in this file, but mainly it is recommended to use the terminal.</p>\n<h4 id=\"installation-1\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#installation-1\"></a>Installation</h4>\n<p>Pip is the package manager for python. For poetry it is recommended to install it with pipx, which takes care of the packages globaly.  </p>\n<ol>\n<li>Install <a href=\"https://pipx.pypa.io/stable/installation/\">pipx</a></li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> pipx\npipx ensurepath\n</code></pre>\n<ol start=\"2\">\n<li>install <a href=\"https://python-poetry.org/docs/#installation\">poetry</a></li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\">pipx <span class=\"token function\">install</span> poetry\n</code></pre>\n<h4 id=\"useful-commands-1\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#useful-commands-1\"></a>Useful commands</h4>\n<div class=\"table-responsive\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th><strong>command</strong></th><th><strong>description</strong></th></tr></thead><tbody><tr><td><code>poetry install</code></td><td>Takes the *.toml file and installs all the packages. Creates the poetry.lock file.</td></tr><tr><td><code>poetry init</code></td><td>This folder will set up to use a virtual environement with poetry.</td></tr><tr><td><code>poetry new &#x3C;projectname></code></td><td>Makes the folder with the files in it.</td></tr><tr><td><code>poetry add &#x3C;pythonpackage></code></td><td>Add a package to your project.</td></tr><tr><td><code>poetry update</code></td><td>For added packages, it is recommended to update them after that.</td></tr><tr><td><code>poetry env use &#x3C;pythonversion></code></td><td>Change python version.</td></tr><tr><td><code>poetry run &#x3C;python script.py></code></td><td>Run your code in poetry.</td></tr><tr><td><code>poetry show</code></td><td>Poetry show packages from environment.</td></tr></tbody></table></div>\n<p><code>poetry install</code> is the same as <code>poetry update</code> if there's no <em>poetry.lock</em> file. It's only slightly more convenient to install directly from the <em>poetry.lock</em> file if you don't want to update dependencies. <code>poetry lock</code> creates a <em>poetry.lock</em> file, but does not install packages.\nIt can be useful in groupworks, that the poetry.lock stays \"unchanged\". So all collaborators are sure, it works with the defined packages.</p>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/commons-dws-public/notes/szdrijhisrocpfc7s49wifq\">2024-02-29</a></li>\n</ul>","noteIndex":{"id":"QvYK9hGbCvPpEfSRYhV8j","title":"Welcome to the COMMONS Lab Open Dendron","desc":"","updated":1693056226815,"created":1630130450048,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"20f67df3dd870fc450a162c202c9ff41","links":[{"type":"wiki","from":{"fname":"root","id":"QvYK9hGbCvPpEfSRYhV8j","vaultName":"vault"},"value":"open-notebook.commons.setup","position":{"start":{"line":43,"column":118,"offset":1871},"end":{"line":43,"column":149,"offset":1902},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"open-notebook.commons.setup"}}],"anchors":{"what-is-this-note":{"type":"header","text":"What is this note","value":"what-is-this-note","line":16,"column":0,"depth":2},"tutorial":{"type":"header","text":"Tutorial","value":"tutorial","line":20,"column":0,"depth":2},"dendron":{"type":"header","text":"Dendron.","value":"dendron","line":22,"column":0,"depth":3},"what-is-dendron-":{"type":"header","text":"What is Dendron ?","value":"what-is-dendron-","line":24,"column":0,"depth":4},"where-to-get-more-info-on-dendron-":{"type":"header","text":"Where to get more info on Dendron ?","value":"where-to-get-more-info-on-dendron-","line":30,"column":0,"depth":4},"concrete-steps-to-access-and-contribute-to-the-dbgi-dendron":{"type":"header","text":"Concrete steps to access and contribute to the DBGI Dendron","value":"concrete-steps-to-access-and-contribute-to-the-dbgi-dendron","line":35,"column":0,"depth":4},"questions-comments-suggestions-":{"type":"header","text":"Questions, comments, suggestions ?","value":"questions-comments-suggestions-","line":52,"column":0,"depth":2}},"children":["5o0tvzf4l6t6moau7en1v48","e4ul30admmxm9ilxfq275cq","h78qbvh1fd9bwcykmcm9uo3","6ooxuf27zzf3grb14o18qf2","tiqo5upbg6224t7i8p87iok","ltq8wcrabmq6mlescrdi4m0","bdq3suiz8yriznljea2zpug","ih6vyup3yre4m9woc9ldl7k","vDTgZL9UHWqYtBFdtD3vK","69ekb2qhuwukr0jwrzy6tnw","373694o1o6ocqohko4um7c9","jldFUSJGjDf1mFH8c2yUI","dh2qp7w4tl6otf89xrmxitv","2rvdf4t5qnx5hqjj29bojcc","stj9lq0lxhfuk5ntomiozz0","gvdyfgvq0z08fcfaqzmhtjo","2rvclk21kfedpvxuzjpizi7","dcwgamgyghrlyau1avlh6ug","432qdutuo1i8h5pcuh39ytt","2npxodkvs5jk6p1eksi551b","h81rw16zzgh9kix8ti1mbam","lco50o42dfeph5i5f2k981w","46d1odkovrpdi6g16992phy","s9gzk7nphtjzmpdqvk5y4vj","82ra6p4ykf814hp8yfw4wp6","hpnaglyhnb48vuiniqecnqf","y7nk7xmiht44neo0q7cl5cs","2cxr093kvrg4jojokwgqrbj","8vfu5h3617jbzy78xr2hlo1","w75krbmkkvla3hwd66hn5bh","40po5od17ekcr1e77dluxao","4pqppog2u66rx1tkc8jy5v9","ektni5nfulyro7dkrbtek7j","vfsp2aci6vy7kg2jsyy8tzu","0wm4geq40t6nscn88rcwu47","ib4jmxy1x3l1r0ewe6hln4j","0h57aw0be2jnc3dxcpn3ajn","4789z8f1dqdh5k3nmgr1m4z","p5dszyuhj1klgje0brtv0xj","sk4m9gq7vz2t9phcxlxvqpw","43p60vv8btyhaclugl93jok","zhc9hhpaobkbo4e2votv6wr","ylulfzi7ra5yv6ja7j78t6e","wj0i9czxvt4v0b674nb8501","ovslc641d0h00s16tf6kl8w","4zmlbmcp6q4q69ycvhavzr6","59ftsVxFXXM9bB43vfKwK","nmnpsy2e1rwqnqgurogi2u6","6b5uf8hv44mbgircddcb46i","s9j6c26u6qgl5dvnqv8opam","je0ksq927btmorptaje6a4p","xm4a1smh9gcahxda5bssxfi","3cgqlppr4es3iuoa2o3mhn8","d6edcr5j5kjgdt791uujpn0","zfu2gniwqhgo1j44r3yfx7y","gap1pjhvt94m5izg0zlef0w","o3y0vguickctv1yx4z42qev","g78c0e4ts7wgkof1ykkgzbl","hsqldiv7revakz0fqay51eu","99wwtyhexdqu5bxrtgn9whw","m8e37qw6n4i3cfv9ohq7e82","ds1s2fjqhwvw1zqst8l4z4f","ec4pkybo5iwljo3zdr9894x","cbikmu2vjnxulf5tf9xfist","1icb0ka0yjwpoerg4zym9la"],"parent":null,"data":{},"body":"\n![](/assets/images/allard-lab.jpg)\n\nWelcome the the COMMONS Lab Open Dendron !\n\nIn the [COMMONS Lab](https://www.unifr.ch/bio/en/groups/allard/) we intent to follow the [Open Notebook Science](https://en.wikipedia.org/wiki/Open-notebook_science) approach to document our research.\n\nFor this we use the [Dendron](https://www.dendron.so/) system as a mean to efficiently capture notes and publish them.\n\n## What is this note\n\nThis note is a succinct tutorial note aiming to get you started in the use of the COMMONS Lab Dendron.\n\n## Tutorial\n\n### Dendron. \n\n#### What is Dendron ?\n\n> Dendron is an open-source, local-first, markdown-based, note-taking tool. Think of it as a cache for everything that you care about - if you've spent more then five minutes solving a problem, you should never spent any more time solving the same exact problem.\n> \n> Dendron is a knowledge base built by and for developers and integrates natively with IDEs like VS Code and VSCodium.\n\n#### Where to get more info on Dendron ?\n\n- You can get more information in the Dendron system at the official website www.dendron.so\n- All the Dendron documentation is hosted here https://wiki.dendron.so/. It is, obviously, a Dendron itself.\n\n#### Concrete steps to access and contribute to the DBGI Dendron\n\n1. Install [VSCode](https://code.visualstudio.com/download)\n2. Install [Dendron](https://marketplace.visualstudio.com/items?itemName=dendron.dendron) from the VSCode marketplace \n3. Clone the COMMONS Dendron repo\n\n    In your terminal\n    ```\n    git clone https://github.com/commons-research/commons-dws-public.git\n    ```\n4. In VSCode open (File/Open) the cloned repository.\n5. Voila ! You should now be in the COMMONS Lab Open Dendron.\n\nFeel free to explore and contribute.\nA first, important step could be to configure VSCode so that you can easily add a daily note. See steps described at [[open-notebook.commons.setup]]\n\n\n## Questions, comments, suggestions ?\n\nFeel free to contribute here https://github.com/orgs/commons-research/discussions\n\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"vaultSelectionModeOnCreate":"smart","fuzzThreshold":0.2}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"dendronVersion":"0.112.0","enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/commons-dws-public","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://commons-research.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"writeStubs":false,"seo":{"title":"COMMONS DWS Public","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Click here to edit this page on Github !","editBranch":"main","editViewMode":"edit","editRepository":"https://github.com/commons-research/commons-dws-public"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root","searchMode":"lookup"}}},"__N_SSG":true}